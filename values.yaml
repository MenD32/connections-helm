# Default values for connections-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
global:
  nameOverride: ""
  fullnameOverride: ""

# Frontend configuration
frontend:
  enabled: true
  replicaCount: 1
  image:
    repository: connections-frontend
    pullPolicy: IfNotPresent
    tag: ""
  service:
    type: ClusterIP
    port: 80
    targetPort: 3000
  resources: {}
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http
  podAnnotations: {}
  podLabels: {}
  env:
    connectionsApiHost: ""  # Will be dynamically set to backend service
    additional: []
      # - name: NODE_ENV
      #   value: "production"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

# Backend configuration
backend:
  enabled: true
  replicaCount: 1
  image:
    repository: connections-backend
    pullPolicy: IfNotPresent
    tag: ""
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  resources: {}
  livenessProbe:
    httpGet:
      path: /health
      port: http
  readinessProbe:
    httpGet:
      path: /health
      port: http
  podAnnotations: {}
  podLabels: {}
  database:
    host: "localhost"
    port: "5432"
    user: "postgres"
    password: "password"
    name: "connections"
  env:
    additional: []
      # - name: PYTHON_ENV
      #   value: "production"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    # targetMemoryUtilizationPercentage: 80

# Legacy configuration (kept for backwards compatibility)
replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: chart-example.local
  frontend:
    paths:
      - path: /
        pathType: Prefix
  backend:
    paths:
      - path: /api
        pathType: Prefix
      - path: /health
        pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# OpenShift Routes (alternative to Ingress)
route:
  enabled: false
  annotations: {}
    # haproxy.router.openshift.io/rate-limit-connections: "true"
    # haproxy.router.openshift.io/rate-limit-connections.concurrent-tcp: "10"
  frontend:
    enabled: true
    host: ""
    path: "/"
    tls:
      enabled: false
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
      # certificate: |
      #   -----BEGIN CERTIFICATE-----
      #   ...
      #   -----END CERTIFICATE-----
      # key: |
      #   -----BEGIN PRIVATE KEY-----
      #   ...
      #   -----END PRIVATE KEY-----
      # caCertificate: |
      #   -----BEGIN CERTIFICATE-----
      #   ...
      #   -----END CERTIFICATE-----
  backend:
    enabled: true
    host: ""
    path: "/api"
    tls:
      enabled: false
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
